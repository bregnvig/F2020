{
  "name": "ui",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "generators": {
    "@nx/angular:component": {
      "style": "scss"
    }
  },
  "sourceRoot": "apps/ui/src",
  "prefix": "f2020",
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "options": {
        "outputPath": "dist/apps/ui",
        "index": "apps/ui/src/index.html",
        "main": "apps/ui/src/main.ts",
        "polyfills": "apps/ui/src/polyfills.ts",
        "tsConfig": "apps/ui/tsconfig.app.json",
        "aot": true,
        "assets": ["apps/ui/src/favicon.ico", "apps/ui/src/assets", "apps/ui/src/firebase-messaging-sw.js", "apps/ui/src/manifest.webmanifest"],
        "styles": ["./node_modules/@angular/material/prebuilt-themes/pink-bluegrey.css", "apps/ui/src/styles.scss"],
        "scripts": []
      },
      "configurations": {
        "production": {
          "fileReplacements": [
            {
              "replace": "apps/ui/src/environments/environment.ts",
              "with": "apps/ui/src/environments/environment.prod.ts"
            },
            {
              "replace": "apps/ui/src/firebase-messaging-sw.js",
              "with": "apps/ui/src/environments/firebase-messaging-sw.prod.js"
            }
          ],
          "optimization": true,
          "outputHashing": "all",
          "sourceMap": false,
          "namedChunks": true,
          "extractLicenses": true,
          "vendorChunk": false,
          "buildOptimizer": true,
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "2mb",
              "maximumError": "5mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "6kb",
              "maximumError": "10kb"
            }
          ],
          "serviceWorker": true,
          "ngswConfigPath": "apps/ui/ngsw-config.json"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        },
        "test": {
          "fileReplacements": [
            {
              "replace": "apps/ui/src/environments/environment.ts",
              "with": "apps/ui/src/environments/environment.test.ts"
            }
          ],
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true,
          "serviceWorker": true,
          "ngswConfigPath": "apps/ui/ngsw-config.json"
        }
      },
      "outputs": ["{options.outputPath}"]
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "options": {
        "browserTarget": "ui:build"
      },
      "configurations": {
        "production": {
          "browserTarget": "ui:build:production"
        },
        "development": {
          "browserTarget": "ui:build:development"
        },
        "test": {
          "browserTarget": "ui:build:test"
        }
      },
      "defaultConfiguration": "development"
    },
    "deploy": {
      "executor": "@angular/fire:deploy",
      "options": {}
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "browserTarget": "ui:build"
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["apps/ui/**/*.ts", "apps/ui/**/*.html"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/ui/jest.config.ts",
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    },
    "serve-static": {
      "executor": "@nx/web:file-server",
      "options": {
        "buildTarget": "ui:build"
      }
    },
    "e2e": {
      "executor": "@nx/playwright:playwright",
      "outputs": ["{workspaceRoot}/dist/.playwright/apps/ui"],
      "options": {
        "config": "apps/ui/playwright.config.ts"
      }
    },
    "storybook": {
      "executor": "@storybook/angular:start-storybook",
      "options": {
        "port": 4400,
        "configDir": "apps/ui/.storybook",
        "browserTarget": "ui:build",
        "compodoc": false
      },
      "configurations": {
        "ci": {
          "quiet": true
        }
      }
    },
    "build-storybook": {
      "executor": "@storybook/angular:build-storybook",
      "outputs": ["{options.outputDir}"],
      "options": {
        "outputDir": "dist/storybook/nestext",
        "configDir": "apps/ui/.storybook",
        "browserTarget": "ui:build",
        "compodoc": false
      },
      "configurations": {
        "ci": {
          "quiet": true
        }
      }
    },
    "test-storybook": {
      "executor": "nx:run-commands",
      "options": {
        "command": "test-storybook -c apps/ui/.storybook --url=http://localhost:4400"
      }
    }
  },
  "tags": []
}
